readline -> Lee una linea y la guarda en un string.
rl_clear_history -> Elimina todas las entradas del historial.
rl_on_new_line -> Pasa a una nueva linea?
rl_replace_line -> Reemplaza el contenido del buffer de readline
rl_redisplay -> Actualiza la pantalla con el buffer actual de readline?
add_history -> Añade el historial a la linea de comandos.
printf -> Imprime por pantalla.
malloc -> Reserva memoria.
free -> Libera memoria.
write -> Escribe en un fd.
access -> Comprueba si hay acceso a una ruta o fd
open -> Abre un fd.
read -> Lee un fd.
close -> Cierra un fd.
fork -> Crea un proceso hijo que es una copia del padre.
wait -> Espera el cambio de estado en los procesos hijos.
waitpid -> Espera el cambio de estado en un proceso concreto.
wait3 -> Suspende la ejecucion del proceso hasta que finaliza el hijo.
wait4 -> Suspende la ejecucion del proceso hasta que finaliza un hijo especifico.
signal -> 
sigaction -> 
kill -> Envia una señal a un proceso.
exit -> 
getcwd -> Devuelve el directorio actual de trabajo.
chdir -> 
stat ->
lstat ->
fstat ->
unlink ->
execve -> Sobreescribe el proceso actual con otro pasado como parametro.
dup -> Duplica un fd.
dup2 -> Duplica un fd.
pipe -> Comunica procesos padre e hijo. Es unidirecional escritura = lectura
opendir -> Abre un directorio y devuelve un puntero al mismo.
readdir -> Lee un directorio.
closedir -> Cierra un directorio.
strerror -> Muestra los errores que devuelve una funcion.
perror -> Muestra los errores que devuelve una funcion.
isatty ->
ttyname ->
ttyslot ->
ioctl ->
getenv -> 
tcsetattr ->
tcgetattr ->
tgetent ->
tgetflag ->
tgetnum ->
tgetstr ->
tgoto ->
tputs ->
