- USE make -n to see if compilation use -Wall -Wextra -Werror if not use invalid compilation flags VVV
- minishell Compile without errors if not use flags VVV
- makefile must not re-link VVV

---Simple Command & global---

- Execute a simple command with an absolute path like /bin/ls or any other command without options VVV
- How many global variables? why? Give a concrete example of why it feels mandatory or logical. XXX????
- Test an empty command.
- Test only spaces or tabs. VVV

---Arguments & history---

- Execute a simple command with an absolute path like /bin/ls or any other command with arguments but without quotes and double quotes VVV
- Repeat multiple times with different commands and arguments VVV

---echo---

- Execute the echo command with or without arguments or -n VVX?
- Repeat multiple times with different arguments VVV

---exit--- xxxx

- Execute exit command with or without arguments
- Repeat multiple times with different arguments
- Don't forget to relaunch the minishell

---Return value of a process--- xxxx

- Execute a simple command with an absolute path like /bin/ls or any other command with arguments but without quotes and double quotes then execute echo $?
- Check the printed value. You can repeat the same in bash and compare it.
- Repeat multiple times with different commands and arguments, use some failing commands like '/bin/ls filethatdoesntexist'
- anything like expr $? + $?

---Signals--- VXX???

- Try ctrl-C in an empty prompt should show a new line with a new prompt
- Try ctrl-\ in an empty prompt should not do anything
- Try ctrl-D in an empty prompt should quit minishell --> RELAUNCH!
- Try ctrl-C in a prompt after you wrote some stuff should show a new line with a new prompt
- The buffer should be clean too, press "enter" to make sure nothing from the old line is executed.
- Try ctrl-D in a prompt after you wrote some stuff should not do anything
- Try ctrl-\ in a prompt after you wrote some stuff should not do anything!
- Try ctrl-C after running a blocking command like cat without arguments or grep “something“
- Try ctrl-\ after running a blocking command like cat without arguments or grep “something“
- Try ctrl-D after running a blocking command like cat without arguments or grep “something“
- Repeat multiple times with different commands
- if something crashes use the crash flag.
- if something is not working use the incomplete work flag.

---Double Quotes---

- Execute a simple command with arguments but this time double quotes (you should include whitespaces) VVV
- a command like : echo "cat lol.c | cat > lol.c" VVV
- anything except $. VVV

---Single Quotes---

- Execute commands with single quotes as an argument VVV
- Try empty arguments VVV
- Try environment variables, whitespaces, pipes, redirection in the single quotes VVV
- echo '$USER' must print $USER VVV
- Nothing should be interpreted VVV

---env---

- Check if env shows you the current environment variables VVV

---export---

- Export environment variables, create new ones and replace old ones VVV
- Check them with env VVV

---unset---

- Export environment variables, create new ones and replace old ones VVV
- Use unset to remove some of them VVV
- Check the result with env VVV

---cd---

- Use the command cd to move the working directory and check if you are in the right directory with /bin/ls VVV
- Repeat multiple times with working and not working cd VVV
- try '.' '..' as arguments too VVV

---pwd---

- Use the command pwd VVV
- Repeat multiple times in multiple directories VVV

---Relative Path---

- Execute commands but this time use a relative path VVV
- Repeat multiple times in multiple directories with a complex relative path (lots of ..)  VVV

---Environment Path---

- Execute commands but this time without any path. (ls, wc, awk etc...) VVV
- Unset the $PATH and check if it is not working anymore VVV
- Set the $PATH to a multiple directory value (directory1:directory2) and check that directories are checked in order from left to right VVV 

---Redirection---

- Execute commands with redirections < and/or > VVV 
- Repeat multiple times with different commands and arguments and sometimes change > with >> VVV 
- Check if multiple of the same redirections fail VVV
- Test << redirection (it doesn't need to update history).  VXX????

---Pipes---

- Execute commands with pipes like 'cat file | grep bla | more' VVV
- Repeat multiple times with different commands and arguments VVV
- Try some failing commands like 'ls filethatdoesntexist | grep bla | more' VVV 
- Try to mix pipes and redirections. VVV

---Go Crazy and history---

- type a command line then use ctrl-C then press enter the buffer should be clean and nothing try to execute. VVV?
- Can we navigate through history with up and down and retry some command VVV
- Execute commands that should not work like 'dsbksdgbksdghsd' and check if the shell doesn't crash and prints an error VVV
- cat | cat | ls behave "normally" VVV
- Try to execute a long command with a ton of arguments VVV
- Have fun with that beautiful minishell and enjoy it

---Environment Variables---

- Execute echo with some $ variables as arguments VVV
- Check that $ is interpreted as an environment variable VVV
- Check that double quotes interpolate $ ????
- Check that $USER exists or set it. VVV
- echo "$USER" should print the value of $USER VVV

------NUEVOS FALLOS-------

- Unificar la gestion de los syntax error fallo al pasar solo | tk_type vale 0


-----ORDEN TONI-----------SUCCESS----
							-echo -n
							-Leaks
							-fd[2] errores
							-prompt compare mayus
-env -i
			-Return value
							-cat cat
-more??

-----ORDEN PABLO-----
-Leaks
-Caracter no imprimible comillas
-Signals heredoc
-Signals
-Expansiones heredoc

Posibles entregas? 27 y 31 diciembre


-fsanitize=address -fno-omit-frame-pointer para compilar con sanitize